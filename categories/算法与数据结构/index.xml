<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法与数据结构 - Category - CodeSniper&#39; Blog</title>
        <link>https://coden1per.github.io/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
        <description>算法与数据结构 - Category - CodeSniper&#39; Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>codesniperrrrr@gmail.com (CodeSniper)</managingEditor>
            <webMaster>codesniperrrrr@gmail.com (CodeSniper)</webMaster><lastBuildDate>Thu, 18 Feb 2021 22:36:00 &#43;0800</lastBuildDate><atom:link href="https://coden1per.github.io/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" rel="self" type="application/rss+xml" /><item>
    <title>Sort</title>
    <link>https://coden1per.github.io/sort/</link>
    <pubDate>Thu, 18 Feb 2021 22:36:00 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://coden1per.github.io/sort/</guid>
    <description><![CDATA[1. comparable接口 代码测试: package Sort.comparable; public class student implements Comparable&lt;student&gt;{ private String username; private int age; public student() { } public student(String username, int age) { this.username = username; this.age = age; } public String getUsername() { return username; } public void setUsername(String username) { this.username = username; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } @Override public String toString() { return &#34;student{&#34; + &#34;username=&#39;&#34; + username + &#39;\&#39;&#39; + &#34;, age=&#34; + age + &#39;}&#39;; } @Override public int compareTo(student o) { return this.]]></description>
</item><item>
    <title>Tree</title>
    <link>https://coden1per.github.io/tree/</link>
    <pubDate>Sun, 17 Jan 2021 22:43:20 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://coden1per.github.io/tree/</guid>
    <description><![CDATA[1. 二叉查找树 二叉树结点类API的设计:    类名 Node&lt;Key,Value&gt;     构造方法 Node(Key key,Value value,Node left,Node right):创建Node对象   成员变量 1. public Node left:记录左子结点 2. public Node right:记录右子结点 3. public Key key:存储键 4. public Value value:存储值    代码实现: public class Node&lt;Key,Value&gt; { //存储键  public Key key; //存储值  public Value value; //存储左子结点  public Node left; //存储右子结点  public Node right; public Node(Key key, Value value, Node left, Node right) { this.]]></description>
</item></channel>
</rss>
