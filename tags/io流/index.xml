<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>IO流 - Tag - CodeSniper&#39; Blog</title>
        <link>https://codesn1per.github.io/tags/io%E6%B5%81/</link>
        <description>IO流 - Tag - CodeSniper&#39; Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>codesniperrrrr@gmail.com (CodeSniper)</managingEditor>
            <webMaster>codesniperrrrr@gmail.com (CodeSniper)</webMaster><lastBuildDate>Fri, 02 Apr 2021 02:00:09 &#43;0800</lastBuildDate><atom:link href="https://codesn1per.github.io/tags/io%E6%B5%81/" rel="self" type="application/rss+xml" /><item>
    <title>IO流</title>
    <link>https://codesn1per.github.io/io%E6%B5%81/</link>
    <pubDate>Fri, 02 Apr 2021 02:00:09 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://codesn1per.github.io/io%E6%B5%81/</guid>
    <description><![CDATA[1. 文件 1. 什么是文件? 保存数据的地方
2. 文件流 文件在程序中是以流的形式来操作的
流: 数据在数据源(文件)和程序(内存)之间经历的路径
输入流: 数据从数据源(文件)到程序(内存)的路径
输出流: 数据从程序(内存)到数据源(文件)的路径
3. 常用文件操作  new File(String pathname) //根据路径创建一个File对象 new File(File parent,String child) //根据父目录文件+子路径创建 new File(String parent,String child) //根据父目录+子路径构建 createNewFile 创建文件 getName,getAbsoutePath,getParent,length,exists,isFile,isDirectory mkdir:创建一级目录,mkdirs: 创建多级目录,delete:删除空目录或文件  2. IO流原理及流的分类 1. io流原理  I/O是input/output的缩写,I/O技术是非常实用的技术,用于处理数据传输,如读写文件,网络通信等; java程序中,对于数据的输入/输出操作以流(stream)的方式进行; java.io包下提供各种&quot;流&quot;类和接口,用以获取不同种类的数据,并通过方法输入或输出数据; 输入input:读取外部数据(磁盘,光盘等存储设备的数据)到程序(内存)中; 输出output:将程序数据输出到磁盘,光盘等存储设备中;  2. 流的分类   按操作数据单位不同分为: 字节流(8bit) 二进制文件,字符流(按字符) 文本文件;
  按数据流的流向不同分为: 输入流,输出流
  按流的角色的不同分为: 节点流,处理流/包装流
 java的IO流共设计40多个类,实际上非常规则,都是从如上4个抽象基类派生的. 由这四个类派生出来的子类名称都是以其父类作为子类名后缀;    3.]]></description>
</item></channel>
</rss>
